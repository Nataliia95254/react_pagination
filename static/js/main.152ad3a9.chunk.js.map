{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","currentPage","onPageChange","onClickForward","onClickBack","pagesRange","visibleItems","isLastPageActive","length","isFirstPageActive","className","cn","disabled","href","onClick","map","item","active","items","App","allItems","selectedFilter","useState","selectedValue","setSelectedValue","activePage","setActivePage","Math","ceil","parseFloat","selectedFilterToNumber","slice","activeList","rangeList","id","value","onChange","e","currentTarget","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,YACAC,EAKI,EALJA,aACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAEMC,EAAmBN,IAAgBI,EAAWA,EAAWG,OAAS,GAClEC,EAAoC,IAAhBR,EAE1B,OACE,qCACE,qBAAIS,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IAA3C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAASV,EALX,oBAUDC,EAAWU,KAAI,SAACC,GACf,OACE,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQhB,IAAgBe,IADvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMZ,EAAac,IAJ9B,SAMGA,KAREA,MAaX,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUL,IAA3C,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAASX,EALX,uBAWJ,6BACGG,EAAaS,KAAI,SAACC,GAAD,OAChB,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YChEXE,EAAQxB,EAAW,EAAG,IA2BfyB,EAAgB,WAC3B,IA1BoBC,EAAoBC,EA0BxC,EAA0CC,mBAAS,KAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMrB,GA7Bce,EA6BYF,EA7BQG,EA6BDE,EA3BzB7B,EAAW,EADHiC,KAAKC,KAAKR,EAASZ,OAASqB,WAAWR,MA8B7D,EAxBiB,SACjBA,EACAI,EACAL,GAEA,IAAId,EACEwB,GAA0BT,EAShC,MAAO,CAPPf,EAAec,EAASW,MACtBN,EAAaK,EAAyBA,EACtCL,EAAaK,GAGA,UAAMxB,EAAa,GAAnB,cAA2BA,EAAaA,EAAaE,OAAS,GAA9D,eAAuEY,EAASZ,SAY5FwB,CAAWT,EAAeE,EAAYP,GADzC,mBAAOZ,EAAP,KAAqB2B,EAArB,KAWA,OACE,sBAAKvB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWe,EADX,mBACgCQ,EADhC,OAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOZ,EACPa,SAAU,SAACC,GAGT,OAFAX,EAAc,GAEPF,EAAiBa,EAAEC,cAAcH,QAR5C,UAWE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACET,YAAawB,EACbvB,aAAcwB,EACdvB,eA3CiB,WACrBuB,EAAcD,EAAa,IA2CvBrB,YAxCc,WAClBsB,EAAcD,EAAa,IAwCvBpB,WAAYA,EACZC,aAAcA,QCrFtBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.152ad3a9.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  currentPage: number;\n  onPageChange: (newPage: number) => void;\n  onClickForward: () => void;\n  onClickBack: () => void;\n  pagesRange: number[];\n  visibleItems: number[];\n}\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  onPageChange,\n  onClickForward,\n  onClickBack,\n  pagesRange,\n  visibleItems,\n}) => {\n  const isLastPageActive = currentPage === pagesRange[pagesRange.length - 1];\n  const isFirstPageActive = currentPage === 1;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: isFirstPageActive })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPageActive}\n            onClick={onClickBack}\n          >\n            «\n          </a>\n        </li>\n        {pagesRange.map((item) => {\n          return (\n            <li\n              className={cn('page-item', { active: currentPage === item })}\n              key={item}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${item}`}\n                onClick={() => onPageChange(item)}\n              >\n                {item}\n              </a>\n            </li>\n          );\n        })}\n        <li className={cn('page-item', { disabled: isLastPageActive })}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPageActive}\n            onClick={onClickForward}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {visibleItems.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42);\n\nconst getPageRange = (allItems: number[], selectedFilter: string) => {\n  const numberOfPages = Math.ceil(allItems.length / parseFloat(selectedFilter));\n  const pages = getNumbers(1, numberOfPages);\n\n  return pages;\n};\n\nconst activeList = (\n  selectedFilter: string,\n  activePage: number,\n  allItems: number[],\n): [number[], string] => {\n  let visibleItems: number[] = [];\n  const selectedFilterToNumber = +selectedFilter;\n\n  visibleItems = allItems.slice(\n    activePage * selectedFilterToNumber - selectedFilterToNumber,\n    activePage * selectedFilterToNumber,\n  );\n\n  const rangeList = `${visibleItems[0]} - ${visibleItems[visibleItems.length - 1]} of ${allItems.length}`;\n\n  return [visibleItems, rangeList];\n};\n\nexport const App: React.FC = () => {\n  const [selectedValue, setSelectedValue] = useState('5');\n  const [activePage, setActivePage] = useState(1);\n\n  const pagesRange = getPageRange(items, selectedValue);\n\n  const [visibleItems, rangeList]\n   = activeList(selectedValue, activePage, items);\n\n  const onClickForward = () => {\n    setActivePage(activePage + 1);\n  };\n\n  const onClickBack = () => {\n    setActivePage(activePage - 1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${activePage} (items ${rangeList})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectedValue}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n              setActivePage(1);\n\n              return setSelectedValue(e.currentTarget.value);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        currentPage={activePage}\n        onPageChange={setActivePage}\n        onClickForward={onClickForward}\n        onClickBack={onClickBack}\n        pagesRange={pagesRange}\n        visibleItems={visibleItems}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}